import streamlit as st

# BÃ¼cherliste
books = [
    "Air â€“ Christian Kracht",
    "Menschenwerk â€“ Han Kang",
    "TrophÃ¤e â€“ Gaea Schoeters",
    "The Rabbit Hutch â€“ Tess Gunty",
    "I Know Why the Caged Bird Sings â€“ Maya Angelou",
    "The Sound and the Fury â€“ William Faulkner",
    "Die Jahre â€“ Annie Ernaux",
    "A Visit from the Goon Squad â€“ Jennifer Egan",
    "Elementarteilchen â€“ Michel Houellebecq",
    "Der falsche GruÃŸ â€“ Maxim Biller",
    "Ein Tag im Leben des Iwan Denissowitsch â€“ Alexander Solschenizyn",
    "Eurotrash â€“ Christian Kracht",
    "Unterleuten â€“ Juli Zeh",
    "Der Trafikant â€“ Robert Seethaler",
    "Heart of Darkness â€“ Joseph Conrad",
    "MÃ¶chte die Witwe ... â€“ SaÅ¡a StaniÅ¡iÄ‡",
    "Die MÃ¶glichkeit von GlÃ¼ck â€“ Anne Rabe",
    "Train Dreams â€“ Denis Johnson"
]

st.title("ðŸ“š Effizientes Buch-Ranking per interaktivem Sortieren")

# -------------------------------------------
# Merge-Sort als Stack-basierte Simulation
# -------------------------------------------

def merge(left, right):
    return {
        "type": "merge",
        "left": left,
        "right": right,
        "result": [],
        "i": 0,
        "j": 0
    }

def init_sort(lst):
    stack = []
    for book in lst:
        stack.append([book])
    ops = []
    while len(stack) > 1:
        a = stack.pop()
        b = stack.pop()
        ops.append(merge(b, a))  # Reihenfolge beachten
    return ops[::-1]  # umgekehrte Reihenf
